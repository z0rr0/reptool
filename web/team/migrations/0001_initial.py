# Generated by Django 3.0.2 on 2020-01-23 17:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Iteration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('comment', models.TextField(verbose_name='comment')),
                ('start', models.DateField(verbose_name='start')),
                ('stop', models.DateField(verbose_name='stop')),
            ],
            options={
                'ordering': ('start',),
                'indexes': [models.Index(fields=['start', 'stop'], name='start_stop_idx')],
            },
        ),
        migrations.CreateModel(
            name='Tracker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('url', models.URLField(verbose_name='url')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('email', models.EmailField(max_length=254, verbose_name='email')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('comment', models.TextField(verbose_name='comment')),
                ('number', models.CharField(max_length=255, unique=True, verbose_name='number')),
                ('title', models.CharField(db_index=True, max_length=4096, verbose_name='title')),
                ('tracker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.Tracker')),
            ],
            options={
                'ordering': ('number',),
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='updated')),
                ('comment', models.TextField(verbose_name='comment')),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('in_progress', 'In progress'), ('done', 'Done')], db_index=True, default='planned', max_length=32, verbose_name='status')),
                ('iteration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.Iteration')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.Task')),
                ('worker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.Worker')),
            ],
            options={
                'ordering': ('iteration', 'worker', 'status'),
            },
        ),
    ]
